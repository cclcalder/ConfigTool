<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ctr="clr-namespace:Exceedra.Controls.UserInterface"
             xmlns:Controls="clr-namespace:Exceedra.Controls.DynamicTab.Controls"
             xmlns:converters="clr-namespace:Exceedra.DynamicTab.Converters"
             xmlns:controls="clr-namespace:Exceedra.Controls.DynamicGrid.Controls"
             xmlns:behaviours="clr-namespace:Exceedra.DynamicGrid.Behaviours"
             xmlns:GridConverters="clr-namespace:Exceedra.DynamicGrid.Converters"
                
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:Converters="clr-namespace:Exceedra.Converters"
             x:Class="Exceedra.Controls.DynamicGrid.Controls.DynamicGridControl" 
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"  
             x:Name="DynamicGridControl1">
    <UserControl.Resources>
        <Converters:BoolToVisibilityConverterInverted x:Key="BoolToVisibilityConverterInverted"/>

        <Style x:Key="VisibilityStyle" TargetType="Label">
            <Style.Triggers>
                <Trigger Property="Content" Value="">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="Content" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MenuItemCheckBoxStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Bd"  BorderThickness="{TemplateBinding BorderThickness}"  SnapsToDevicePixels="False">
                            <!--BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"-->

                            <Grid x:Name="Grid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="25" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                    <ColumnDefinition Width="14"/>
                                </Grid.ColumnDefinitions>
                                <Path x:Name="CheckPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="10,0" Visibility="Hidden" VerticalAlignment="Center"/>
                                <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                                <TextBlock x:Name="InputGestureText" Grid.Column="2" DockPanel.Dock="Right" Margin="5,2,0,2" Text="{TemplateBinding InputGestureText}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="CheckPanel" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <converters:HasChangesCanEditBooleanConverter x:Key="HasChangesToBooleanConverter"/>
        <converters:InverseBoolToVisibilityConverter x:Key="InvBoolToVisConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
        <GridConverters:ToPercentageConverter x:Key="ToPercentageConverter"/>

        <DataTemplate x:Key="TabbedViewTemplate">
            <Controls:DynamicTabControl ItemDataSource="{Binding DetailsViewModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding HasChanges, Converter={StaticResource HasChangesToBooleanConverter}}" />
        </DataTemplate>
        <!--Width="{Binding ElementName=dynGrid, Path=ActualWidth, UpdateSourceTrigger=PropertyChanged}"-->
        <DataTemplate x:Key="HorizontalGridTemplate">
            <Grid x:Name="parentGrid" Tag="0.97" MaxHeight="400" HorizontalAlignment="Left">
                <Grid.Width>
                    <MultiBinding Converter="{StaticResource ToPercentageConverter}">
                        <Binding ElementName="dynGrid" Path="ActualWidth" UpdateSourceTrigger="PropertyChanged"/>
                        <Binding ElementName="parentGrid" Path="Tag" />
                    </MultiBinding>
                </Grid.Width>
                <controls:DynamicGridControl ItemDataSource="{Binding DetailsViewModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <!--Visibility="{Binding IsDetailsViewModelVisible, Converter={StaticResource BoolToVisConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->
            </Grid>
        </DataTemplate>

        <GridConverters:RowDetailsTemplateSelector x:Key="DetailsTemplateSelector" 
                                                   TabbedViewTemplate="{StaticResource TabbedViewTemplate}"
                                                   DynamicGridTemplate="{StaticResource HorizontalGridTemplate}"/>
 
        
        
    </UserControl.Resources>
    <Grid  >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/><!--Title and Search-->
            <RowDefinition Height="*"/><!-- Loader and Grids -->
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Height="auto"  Background="White" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>


            <Label Grid.Column="0" Style="{StaticResource VisibilityStyle}"  x:Name="headerLabel" FontSize="15"  Content="{Binding ElementName=DynamicGridControl1, Path=ItemDataSource.GridTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" />
            <telerik:RadWatermarkTextBox  Grid.Column="1"  x:Name="FilterTextBox" GotFocus="FilterTextBox_GotFocus" LostFocus="FilterTextBox_LostFocus"
                                          KeyUp="FilterTextBox_TextChanged"  HorizontalAlignment="Right" 
                                          Margin="0,0,0,5"
                                          Visibility="{Binding ElementName=DynamicGridControl1,Path=ItemDataSource.IsFilterVisible, Converter={StaticResource BoolToVisConverter}}">
                <telerik:RadWatermarkTextBox.WatermarkTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="3,0,0,0" Text="Filter" Width="150" />
                        </StackPanel>
                    </DataTemplate>
                </telerik:RadWatermarkTextBox.WatermarkTemplate>
            </telerik:RadWatermarkTextBox>
        </Grid>

        <Grid Grid.Row="1" Background="White" Visibility="{Binding IsEmpty, ElementName=DynamicGridControl1, Converter={StaticResource BoolToVisibilityConverterInverted}, UpdateSourceTrigger=PropertyChanged}">
            <ctr:Loader x:Name="LoadingPanel" CloseVisible="False" Complete="True" Message="Loading..." Panel.ZIndex="1"
                        SubMessage="Please Wait" IsLoading="{Binding ElementName=DynamicGridControl1, Path=ItemDataSource.IsDataLoading}"
                        />

            <!--Split loader and grids so easy to control visibility.-->
            <Grid Visibility="{Binding ElementName=DynamicGridControl1, Path=ItemDataSource.IsDataLoading, Converter={StaticResource InvBoolToVisConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <DataGrid x:Name="headersGrid"  
                        Grid.Row="0"
                        RowHeaderWidth="0" 
                         
                        BorderThickness="1"
                        BorderBrush="#e5e5e5"
                        Background="#e5e5e5"
                        AutoGenerateColumns="False" 
                        SelectionUnit="Cell" 
                        Panel.ZIndex="0"  
                        RowHeight="25"   
                        IsSynchronizedWithCurrentItem="True" 
                        VerticalGridLinesBrush="#CCC" 
                        HorizontalGridLinesBrush="#CCC"
                        Visibility="Collapsed"
                        CanUserAddRows="False" 
                        CanUserResizeColumns="False"
                        CanUserResizeRows="False" 
                        CanUserDeleteRows="False" 
                        CanUserReorderColumns="False"
                        Margin="0,0,0,5"
                        ScrollViewer.CanContentScroll="False"
                        ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                        ScrollViewer.VerticalScrollBarVisibility="Hidden"
                        ItemsSource="{Binding ElementName=DynamicGridControl1, Path=Headers, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">

                    <DataGrid.Resources>
                        <!--SINGLE CLICK EDITING-->
                        <Style TargetType="{x:Type DataGridCell}">
                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridCell_PreviewMouseLeftButtonDown"></EventSetter>
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter Property="Padding" Value="4,4,4,4" ></Setter>
                        </Style>

                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock Padding="2" 
                                                   TextWrapping="Wrap" 
                                                   Text="{Binding}" 
                                                   HorizontalAlignment="Center" 
                                                   VerticalAlignment="Center"  
                                                   FontWeight="Bold"   
                                                   TextAlignment="Center" 
                                                   FontSize="12" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>


                    </DataGrid.Resources>

                </DataGrid>

                <DataGrid    x:Name="dynGrid" 
                         HeadersVisibility="{Binding ElementName=DynamicGridControl1, Path=ShowHeaders}"
                            AutoGenerateColumns="False" 
                            Background="Transparent" RowBackground="Transparent"
                            Grid.Row="1" 
                            RowHeaderWidth="0" 
                            SelectionUnit="Cell" 
			                Panel.ZIndex="0"                           
                            RowHeight="{Binding ElementName=DynamicGridControl1, Path=RowHeight}"    
                            Visibility="Collapsed"
                            IsSynchronizedWithCurrentItem="True" 
                            VerticalGridLinesBrush="#ddd" 
                             HorizontalGridLinesBrush="#ddd" 
                             GridLinesVisibility="All"
                            CanUserAddRows="{Binding ElementName=DynamicGridControl1, Path=CanAddRow}" 
                            CanUserResizeRows="False" 
                            CanUserDeleteRows="False" 
                            CanUserReorderColumns="False"
                            LayoutUpdated="dynGrid_LayoutUpdated"                            
                            ScrollViewer.HorizontalScrollBarVisibility="Auto"
                            ScrollViewer.VerticalScrollBarVisibility="Hidden"
                            EnableRowVirtualization="True"
                            EnableColumnVirtualization="False"
                            RowDetailsTemplateSelector="{StaticResource DetailsTemplateSelector}"                              
                            ScrollViewer.ScrollChanged="DynGridScrollChanged"
			                ItemsSource="{Binding ElementName=DynamicGridControl1, Path=VisibleRecords, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            PreviewKeyUp="DynGrid_OnPreviewKeyUp"
                            behaviours:PixelBasedScrollingBehaviour.IsEnabled="True"
                           
                         PreviewMouseRightButtonUp="DataGrid_MouseRightButtonUp"
                                                         CurrentCellChanged="dynGrid_CurrentCellChanged"
                             PreviewKeyDown="dynGrid_PreviewKeyDown" 
                    >
                    <DataGrid.ContextMenu>
                        <ContextMenu x:Name="CellContextMenu" >
                            <MenuItem Header="Export csv...">
                                <MenuItem Tag="Headers" Header="With Headers" Click="ExportCsv"/>
                                <MenuItem Tag="NoHeaders" Header="Without Headers" Click="ExportCsv"/>
                            </MenuItem>
                            <MenuItem Header="Copy...">
                                <MenuItem Tag="Headers" Header="With Headers" Click="CopyCsv"/>
                                <MenuItem Tag="NoHeaders" Header="Without Headers" Click="CopyCsv"/>
                            </MenuItem>
                            <MenuItem x:Name="ContextMenuSetValueTo" Header="Set values to" >
                                <MenuItem Click="ShowHideMeasures_Click" x:Name="rdnMeasure" Style="{StaticResource MenuItemCheckBoxStyle}" StaysOpenOnClick="True" IsCheckable="True" IsChecked="True">
                                    <MenuItem.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="Increase by n%" Margin="2"/>
                                            <ComboBox DisplayMemberPath="DisplayName" x:Name="MenuOptions" Width="140" Margin="2" />
                                        </StackPanel>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem x:Name="rdnSetValue" IsCheckable="True" Style="{StaticResource MenuItemCheckBoxStyle}" StaysOpenOnClick="True" Click="ShowHideMeasures_Click" >
                                    <MenuItem.Header>
                                        <Label Content="Set Values to..." Margin="2"/>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem StaysOpenOnClick="True" Style="{StaticResource MenuItemCheckBoxStyle}">
                                    <MenuItem.Header>
                                        <TextBox x:Name="txtMassAmendValue" HorizontalAlignment="Left" Width="140" Margin="5,2"/>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Name="btnMassAmendApply" StaysOpenOnClick="True" Style="{StaticResource MenuItemCheckBoxStyle}" >
                                    <MenuItem.Header>
                                        <Button Content="Apply" Width="140" Margin="5,2" HorizontalAlignment="Left" Click="ContextMenuApply" />
                                    </MenuItem.Header>
                                </MenuItem>
                            </MenuItem>
                            <MenuItem x:Name="AddCommentMenuItem" Header="Add Comment">
                                <MenuItem StaysOpenOnClick="True" Style="{StaticResource MenuItemCheckBoxStyle}">
                                    <MenuItem.Header>
                                        <TextBox x:Name="TxtComment" MinWidth="200" MaxWidth="200" Margin="5,2" TextWrapping="Wrap" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem StaysOpenOnClick="True" Style="{StaticResource MenuItemCheckBoxStyle}">
                                    <MenuItem.Header>
                                        <Button Content="Apply" Width="140" Margin="5,2" Click="btnAddCommentApply_Click"/>
                                    </MenuItem.Header>
                                </MenuItem>
                            </MenuItem>
                            <MenuItem x:Name="ContextMenuVisibleColumns" Header="Visible Columns" StaysOpenOnClick="True"/>


                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="DetailsVisibility" Value="{Binding IsDetailsViewModelVisible, Converter={StaticResource BoolToVisConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Setter Property="Visibility" Value="{Binding Item_IsDisplayed, Converter={StaticResource BoolToVisConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="IsTabStop" Value="False" />
                            <EventSetter Event="LostFocus" Handler="OnCellLostFocus" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasChanges, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="2">
                                    <Setter Property="Opacity" Value="0.8"/>
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </DataTrigger>
                            </Style.Triggers>
                            <!--<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},  Converter={StaticResource booltocolconv}}" 
                                
                                />-->
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Resources>
                        <!--SINGLE CLICK EDITING-->
                        <Style TargetType="{x:Type DataGridCell}">
                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridCell_PreviewMouseLeftButtonDown"/>
                            <Setter Property="IsTabStop" Value="False" />
                        </Style>

                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock Padding="2" 
                                                   TextWrapping="Wrap" 
                                                   Text="{Binding}" 
                                                   HorizontalAlignment="Center" 
                                                   VerticalAlignment="Center"  
                                                   FontWeight="Bold"   
                                                   TextAlignment="Center" 
                                                   FontSize="12" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                    </DataGrid.Resources>
                </DataGrid>

                <DataGrid x:Name="reultsGrid"  
                        Grid.Row="2"
                        RowHeaderWidth="0" 
                        BorderThickness="1"
                        BorderBrush="White"
                        Background="#e5e5e5"
                        AutoGenerateColumns="False" 
                        SelectionUnit="Cell" 
                        Panel.ZIndex="0"  
                        RowHeight="25"   
                        IsSynchronizedWithCurrentItem="True" 
                        VerticalGridLinesBrush="#CCC" 
                        HorizontalGridLinesBrush="#CCC"
                        Visibility="{Binding ElementName=DynamicGridControl1, Path=CanShowResults}"
                        CanUserAddRows="False" 
                        CanUserResizeRows="False" 
                        CanUserDeleteRows="False" 
                        CanUserReorderColumns="False"
                        HeadersVisibility="None"
                        ScrollViewer.CanContentScroll="False"
                        ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                        ScrollViewer.VerticalScrollBarVisibility="Hidden"
                        IsReadOnly="True"
                        ItemsSource="{Binding ElementName=DynamicGridControl1, Path=Results}" />

            </Grid>

        </Grid>

        <Grid Background="White" Grid.Row="1" Visibility="{Binding IsEmpty, ElementName=DynamicGridControl1, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
            <telerik:Label Content="{Binding IsEmptyMessage, ElementName=DynamicGridControl1}" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Grid>
    </Grid>
</UserControl>
 