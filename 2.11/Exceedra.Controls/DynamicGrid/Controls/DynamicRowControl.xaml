<UserControl x:Class="Exceedra.Controls.DynamicRow.Controls.DynamicRowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:controls="clr-namespace:Exceedra.Controls"
             xmlns:controls1="clr-namespace:Exceedra.MultiSelectCombo.Controls"
             xmlns:converters="clr-namespace:Exceedra.DynamicGrid.Converters"
             xmlns:converters1="clr-namespace:Exceedra.Converters"
             xmlns:userInterface="clr-namespace:Exceedra.Controls.UserInterface"
             d:DesignHeight="300" d:DesignWidth="300"
             x:Name="VertGrid">
    <UserControl.Resources>
    	<converters1:BoolToVisibilityConverterInverted x:Key="BoolToVisibilityConverterInverted"/>
        <converters:DateTimeConverter x:Key="DateTimeConverter"></converters:DateTimeConverter>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />


        <DataTemplate x:Key="Checkbox">
            <CheckBox Height="28"
                      x:Name="cb" VerticalContentAlignment="Center"
                      IsEnabled="{Binding IsEditable}"
                      IsChecked="{Binding IsChecked, Mode=TwoWay}" />
        </DataTemplate>

        <DataTemplate x:Key="Combobox">
            <telerik:RadComboBox IsEnabled="{Binding IsEditable}"
                                 x:Name="cmb"
                                 ItemsSource="{Binding Values, Mode=TwoWay}"
                                 DisplayMemberPath="Item_Name"
                                 VerticalContentAlignment="Center"
                                 SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                                 AutomationProperties.Name="{Binding ColumnCode}"
                                 Height="28"
                                 CanAutocompleteSelectItems="True" CanKeyboardNavigationSelectItems="True"
                                 IsEditable="True" OpenDropDownOnFocus="True" IsFilteringEnabled="True"
                                 TextSearchMode="Contains">
            </telerik:RadComboBox>
        </DataTemplate>

        <DataTemplate x:Key="Textbox">
            <TextBox IsReadOnly="{Binding IsEditable, Converter={StaticResource InverseConverter}}"
                     x:Name="txt" Height="28"
                     VerticalContentAlignment="Center"
                     Text="{Binding Value, Mode=TwoWay}"
                     KeyUp="UIElement_OnKeyUp" LostFocus="UIElement_OnLostFocus"
                     />

        </DataTemplate>

        <DataTemplate x:Key="DatePicker">
            <DatePicker IsEnabled="{Binding IsEditable}"
                        x:Name="dp" Height="28"
                        VerticalContentAlignment="Center"
                        SelectedDate="{Binding Path=Value, Converter={StaticResource DateTimeConverter}}" />
                <!-- 
                JS: For some reason, regardless of the culture a user has set, the datepicker expects the Value to be in the "en-GB" culture.
                That's why I have decided to use a converter, which converts the Value to the "en-GB" culture and provides it to the date picker.
                -->
        </DataTemplate>

        <DataTemplate x:Key="FileSelector">
            <controls:FileEntry Height="28" VerticalContentAlignment="Center"
                                x:Name="fe"
                                IsReadOnlyMode="{Binding IsReadOnly}"
                                Path="{Binding Value, Mode=TwoWay}"/>
        </DataTemplate>

        <DataTemplate x:Key="MultiSelect">
            <controls1:MultiSelectComboBox DataSource="{Binding Items, Mode=TwoWay}" MaxWidth="{Binding MaxWidth}"
                                           IsSelectionEnabled="{Binding IsEditable}"
                                           Height="28" HorizontalContentAlignment="Stretch"
                                           PropertyChanged="MultiSelectComboBox_OnPropertyChanged"
                                           
                                           />


        </DataTemplate>

        <DataTemplate x:Key="Label">
            <Label x:Name="hyp" Width="{Binding Width, ElementName=col2}"
                   Content="{Binding Value}" />

        </DataTemplate>

        <converters:RowTemplateSelector x:Key="TemplateSelector"
                                        CheckboxTemplate="{StaticResource Checkbox}"
                                        SingleSelectComboboxTemplate="{StaticResource Combobox}"
                                        TextboxTemplate="{StaticResource Textbox}"
                                        DatePickerTemplate="{StaticResource DatePicker}"
                                        FileSelectorTemplate="{StaticResource FileSelector}"
                                        MultiSelectComboboxTemplate="{StaticResource MultiSelect}"
                                        LabelTemplate="{StaticResource Label}" />

    </UserControl.Resources>

    <Grid>
    	<Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
    		<RowDefinition Height="Auto"/>
    		<RowDefinition Height="Auto"/>
    	</Grid.RowDefinitions>
        <userInterface:Loader x:Name="LoadingPanel"  
                              Message="Loading..."
                              SubMessage="Please Wait"
                              IsLoading="{Binding ElementName=VertGrid, Path=ItemDataSource.IsLoading}" 
                              Panel.ZIndex="1" Grid.Row="0" CloseVisible="False"  />

        <ItemsControl x:Name="dynamicgrid" ItemsSource="{Binding ElementName=VertGrid, Path=ItemDataSource.Records[0].VisibleProperties}" Grid.Row="1"
                      Visibility="{Binding ElementName=VertGrid, Path=ItemDataSource.IsLoading, Converter={StaticResource BoolToVisibilityConverterInverted}}" Grid.IsSharedSizeScope="True"
                      >
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="column1"  Width="Auto" />
                            <ColumnDefinition Width="*" x:Name="col2" MaxWidth="{Binding MaxWidth}" />
                            <ColumnDefinition SharedSizeGroup="column2" Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Grid x:Name="HeaderTextGrid" Margin="0,0,16,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <TextBlock x:Name="TextBlock22" Grid.Column="0"
                                       Text="{Binding HeaderText, Mode=TwoWay}"
                                       Padding="4,4,4,4"
                                       TextWrapping="Wrap"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       FontWeight="Bold" TextAlignment="Left" FontSize="12" />

                            <TextBlock Text="*" Grid.Column="1" Visibility="{Binding IsRequired, Converter={StaticResource BoolToVisConverter}}" />

                        </Grid>

                        <ContentControl Grid.Column="1" Content="{Binding}"
                                        ContentTemplateSelector="{StaticResource TemplateSelector}"/>

                        <CheckBox Grid.Column="2" Margin="20,2,2,2"
                                  Visibility="{Binding ShowCheckBoxColumn, Converter={StaticResource BoolToVisConverter}}"
                                  IsChecked="{Binding TemplateEditableCheckbox, Mode=TwoWay }"
                                  Content="Make read only in promotions"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center" />
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <Grid Name="RecordsErrorGrid" Margin="7,0,1,0" Visibility="{Binding ItemDataSource.AreRecordsValid, Converter={StaticResource BoolToVisibilityConverterInverted}, ElementName=VertGrid, Mode=OneWay}" Grid.Row="2">
        	<Grid.ColumnDefinitions>
        		<ColumnDefinition Width="Auto"/>
        		<ColumnDefinition/>
        	</Grid.ColumnDefinitions>
        	<Image Width="16" Height="16">
        		<Image.Style>
        			<Style TargetType="{x:Type Image}">
        				<Setter Property="Source" Value="{StaticResource FlagImage}"/>
        				<Setter Property="ToolTip" Value="Invalid data provided."/>
        			</Style>
        		</Image.Style>
        	</Image>

            <TextBlock Name="RecordsErrorMessageLabel" Text="{Binding ItemDataSource.RecordsErrorMessage, ElementName=VertGrid, Mode=OneWay}" TextWrapping="Wrap"  Grid.Column="1"/>

        </Grid>

    </Grid>
</UserControl>