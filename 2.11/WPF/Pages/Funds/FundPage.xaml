<pages:PageBase
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:UI="clr-namespace:Coder.WPF.UI;assembly=Coder.UI.WPF" 
        xmlns:uc="clr-namespace:WPF.UserControls"   
      xmlns:lex="clr-namespace:WPF"	 
	    xmlns:Controls="clr-namespace:Exceedra.Controls.DynamicGrid.Controls;assembly=Exceedra.Controls"
	    xmlns:controls="clr-namespace:Exceedra.Controls;assembly=Exceedra.Controls"
    xmlns:singleSelect="clr-namespace:Exceedra.SingleSelectCombo.Controls;assembly=Exceedra.Controls"
	    xmlns:pages="clr-namespace:WPF.Pages"
	    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
	    xmlns:multiSelect="clr-namespace:Exceedra.MultiSelectCombo.Controls;assembly=Exceedra.Controls"
	    xmlns:azure="clr-namespace:Exceedra.Controls.Storage.Azure;assembly=Exceedra.Controls"
	    x:Class="WPF.Pages.FundPage"
	  mc:Ignorable="d" 
	  d:DesignHeight="800" d:DesignWidth="1024"
	Title="EventPage" Background="White" >

    <Page.Resources>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="1"/>
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Margin" Value="1"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="1"/>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="1"/>
        </Style>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="FontWeight" Value="Normal" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="VisibilityStyle" TargetType="TextBlock">
            <Style.Triggers>
                <Trigger Property="Text" Value="">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />

    </Page.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="35" />
            <RowDefinition Height="3" />
            <RowDefinition Height="258" />
            <RowDefinition Height="5" />
            <RowDefinition  />
            <RowDefinition Height="Auto" Tag="buttons"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Grid.Column="1"
				Orientation="Horizontal" VerticalAlignment="Center"
				HorizontalAlignment="Right"
				Margin="5" >
            <Button Style="{StaticResource SecondaryBtn}" Command="{Binding ReloadCommand}" Margin="4,0" Content="{lex:Loc Button_Reload, 'Reload'}"/>
            <Button Style="{StaticResource SecondaryBtn}" Command="{Binding CancelCommand}" Margin="4,0" Content="{lex:Loc Button_Cancel, 'Cancel'}"/>
        </StackPanel>


        <TextBlock Grid.Row="0" Grid.ColumnSpan="2" FontSize="16px" Margin="4"
                         HorizontalAlignment="Center" Text="{Binding PageTitle}" Style="{StaticResource VisibilityStyle}" />

        <Border Grid.Row="1" Grid.ColumnSpan="3" VerticalAlignment="Center" Height="1" BorderThickness="1"
                    BorderBrush="Gray" />

        <Grid Grid.ColumnSpan="3" VerticalAlignment="Stretch" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition  />
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition  />
            </Grid.ColumnDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="80" Tag="what 0"/>
                    <RowDefinition  Tag="when 1" Height="Auto"/>
                    <RowDefinition Tag="where 2" Height="Auto"/>
                </Grid.RowDefinitions>

                <GroupBox Grid.Row="0" HorizontalAlignment="Stretch"
				   Margin="0,3,5,10" >
                    <GroupBox.Header>
                        <TextBlock Text="{lex:Loc Label_What, 'What'}" Style="{StaticResource GlobalGroupHeaderStyle}" />
                    </GroupBox.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100px"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="100px"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Content="{lex:Loc Label_Description}"/>

                        <TextBox  Text="{Binding FundDetails.Name}" HorizontalAlignment="Stretch" Grid.ColumnSpan="4" />

                        <Label Grid.Row="1" Grid.Column="0" Content="{lex:Loc Label_Type}" />

                        <telerik:RadComboBox  Grid.Row="1" Grid.Column="1" 
                                              ItemsSource="{Binding Types, Mode=TwoWay}" 
                                              DisplayMemberPath="Name"
                                              IsEnabled="{Binding IsEditable, Mode=OneWay}"
                                              VerticalContentAlignment="Center"
                                              SelectedItem="{Binding SelectedType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              CanAutocompleteSelectItems="True" CanKeyboardNavigationSelectItems="True"
                                              IsEditable="True" OpenDropDownOnFocus="True" IsFilteringEnabled="True"
                                              TextSearchMode="Contains"
                                              />
                        <Label Grid.Row="1" Grid.Column="2" Content="{lex:Loc Label_SubType}"/>

                        <telerik:RadComboBox  Grid.Row="1" Grid.Column="3"
                                              ItemsSource="{Binding SubTypes, Mode=TwoWay}" 
                                              DisplayMemberPath="Name"
                                              IsEnabled="{Binding IsEditable, Mode=OneWay}"
                                              VerticalContentAlignment="Center"
                                              SelectedItem="{Binding SelectedSubType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              CanAutocompleteSelectItems="True" CanKeyboardNavigationSelectItems="True"
                                              IsEditable="True" OpenDropDownOnFocus="True" IsFilteringEnabled="True"
                                              TextSearchMode="Contains"
                                              />
                         <Label Content="{lex:Loc Label_IsParent, 'Parent'}" Grid.Row="2" Grid.Column="0" 
                               Visibility="{Binding IsParentCheckboxEnabled, Converter={StaticResource BoolToVisConverter}}" />
                         <CheckBox Grid.Row="2" Grid.Column="1" IsChecked="{Binding Path=FundDetails.IsParent, Mode=TwoWay}" 
                                  Visibility="{Binding IsParentCheckboxEnabled, Converter={StaticResource BoolToVisConverter}}"
                               Command="{Binding ParentCheckedCommand}" ></CheckBox>
                    </Grid>
                </GroupBox>


                <UI:ReadOnlyStateManager HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="0" IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"   >
                    <GroupBox   Margin="0,3,5,8">

                        <GroupBox.Header>
                            <TextBlock Text="{lex:Loc Label_When, 'When'}" Style="{StaticResource GlobalGroupHeaderStyle}" />
                        </GroupBox.Header>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100px"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="100px"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{lex:Loc Label_Start}"/>

                            <DatePicker Grid.Column="1" SelectedDate="{Binding Path=FundDetails.Date_Start, Mode=TwoWay}" x:Name="d1"
                                        DisplayDateEnd="{Binding SelectedDate, ElementName=d2}"/>
                            <Label Grid.Column="2" Content="{lex:Loc Label_End}"/>
                            <DatePicker Grid.Column="3" SelectedDate="{Binding Path=FundDetails.Date_End, Mode=TwoWay}" x:Name="d2"
                                        DisplayDateStart="{Binding SelectedDate, ElementName=d1}"/>

                        </Grid>
                    </GroupBox>
                </UI:ReadOnlyStateManager>

                <UI:ReadOnlyStateManager HorizontalAlignment="Stretch" Grid.Row="2" Grid.Column="0" IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"   >

                    <GroupBox Margin="0,3,5,8">
                        <GroupBox.Header>
                            <TextBlock Text="{lex:Loc Label_Where, 'Where'}" Style="{StaticResource GlobalGroupHeaderStyle}" />
                        </GroupBox.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="2"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100px"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="100px"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="{lex:Loc Label_CustomerLevel}"/>

                            <telerik:RadComboBox  Grid.Row="0" Grid.Column="1"
                                              ItemsSource="{Binding CustomerLevels, Mode=TwoWay}" 
                                              DisplayMemberPath="Name"
                                              IsEnabled="{Binding IsEditable, Mode=OneWay}"
                                              VerticalContentAlignment="Center"
                                              SelectedItem="{Binding SelectedCustomerLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              CanAutocompleteSelectItems="True" CanKeyboardNavigationSelectItems="True"
                                              IsEditable="True" OpenDropDownOnFocus="True" IsFilteringEnabled="True"
                                              TextSearchMode="Contains"
                                              />

                            <Label Grid.Row="0" Grid.Column="2" Content="{lex:Loc Label_ProductLevel}"/>

                            <telerik:RadComboBox  Grid.Row="0" Grid.Column="3"
                                              ItemsSource="{Binding ProductLevels, Mode=TwoWay}" 
                                              DisplayMemberPath="Name"
                                              IsEnabled="{Binding IsEditable, Mode=OneWay}"
                                              VerticalContentAlignment="Center"
                                              SelectedItem="{Binding SelectedProductLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              CanAutocompleteSelectItems="True" CanKeyboardNavigationSelectItems="True"
                                              IsEditable="True" OpenDropDownOnFocus="True" IsFilteringEnabled="True"
                                              TextSearchMode="Contains"
                                              />

                            <Label Grid.Row="2" Grid.Column="0" Content="{lex:Loc Label_Selection}" />

                            <multiSelect:MultiSelectComboBox Grid.Row="2" Grid.Column="1" DataSource="{Binding Customers, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                             IsSelectionEnabled="{Binding IsEditable, Mode=OneWay}"     
                                                             Height="25"
                                                             />

                            <Label Grid.Row="2" Grid.Column="2" Content="{lex:Loc Label_Selection}"/>

                            <multiSelect:MultiSelectComboBox Grid.Row="2" Grid.Column="3" DataSource="{Binding Products, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                             IsSelectionEnabled="{Binding IsEditable, Mode=OneWay}"
                                                             Height="25"
                                                             />

                        </Grid>
                    </GroupBox>
                </UI:ReadOnlyStateManager>
            </Grid>

            <GridSplitter x:Name="splt1"   Grid.Column="1" Width="5"   
                          HorizontalAlignment="Center"
				 VerticalAlignment="Stretch"    />
            <Grid Grid.Column="2" Grid.Row="0"   >
                <GroupBox Margin="5,3,0,0"  VerticalAlignment="Stretch"
                       ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" >
                    <GroupBox.Header>
                        <TextBlock Text="{lex:Loc Label_Impacts, 'Impacts'}" Style="{StaticResource GlobalGroupHeaderStyle}" />
                    </GroupBox.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Controls:DynamicGridControl Grid.Column="0" Grid.Row="0" 
                                                     HorizontalAlignment="Stretch" Margin="5" VerticalAlignment="Stretch" 
                                                     ItemDataSource="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=DataContext.Values, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />


                        <UI:ReadOnlyStateManager HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="0" IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"   >
                            <Grid   Margin="5" VerticalAlignment="Bottom">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>

                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="80"></ColumnDefinition>

                                </Grid.ColumnDefinitions>

                                <TextBlock Text="{lex:Loc Label_AddNewFundValue,'Fund Value'}" HorizontalAlignment="Right" Margin="5"></TextBlock>
                                <telerik:RadComboBox  Grid.Column="1" 
                                                      x:Name="ImpactsComboBox"  
                                                      ItemsSource="{Binding Impacts}" 
                                                      DisplayMemberPath="Name"
                                                      SelectedValuePath="Idx" VerticalContentAlignment="Center"
                                                      SelectedItem="{Binding SelectedImpact}"  
                                                      CanAutocompleteSelectItems="True" CanKeyboardNavigationSelectItems="True"
                                                      IsEditable="True" OpenDropDownOnFocus="True" IsFilteringEnabled="True"
                                                      TextSearchMode="Contains"
                                                      />
                                <TextBox x:Name="tFundValue" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Stretch" Text="{Binding NewImpactValue, UpdateSourceTrigger=PropertyChanged}"  
                                         uc:TextBoxProperties.AllowedCharactersRegex="-\d,." ></TextBox>
                                <Button Style="{StaticResource SecondaryBtn}" Grid.Row="0" Grid.Column="3" Content="{lex:Loc Button_AddNew,'Add'}" Command="{Binding AddNewImpactCommand}" ></Button>
                            </Grid>
                        </UI:ReadOnlyStateManager>

                    </Grid>
                </GroupBox>
            </Grid>
        </Grid>

 
     

            <telerik:RadTabControl x:Name="RadTabControl" HorizontalAlignment="Stretch"  
                                    VerticalAlignment="Stretch" SelectedIndex="0"  Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,10,0,10"   >


                <telerik:RadTabItem  x:Name="TransferLogRadTabItem" IsSelected="{Binding TransferTabSelected}" Header="{lex:Loc Label_TransferLog, 'Transfer Log'}" Height="25">

                    <Controls:DynamicGridControl x:Name="TransferGrid"
                                             HorizontalAlignment="Stretch" Margin="10" VerticalAlignment="Stretch" 
                                             ItemDataSource="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=DataContext.TransferLog, Mode=TwoWay}" />

                </telerik:RadTabItem>

                <telerik:RadTabItem x:Name="LinkedEventsRadTabItem" IsSelected="{Binding LinkedEventsTabSelected}" 
                                    Header="{lex:Loc Label_Rob2LinkedEvents, 'Linked Events'}"
                                  Height="25">
                    <Grid   Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>


                        <Controls:DynamicGridControl Grid.Row="0"
                                             HorizontalAlignment="Stretch" Margin="5" VerticalAlignment="Stretch" 
                                             ItemDataSource="{Binding LinkedEvents}" />

                        <Controls:DynamicGridControl Grid.Row="1" HorizontalAlignment="Stretch" Margin="5" VerticalAlignment="Stretch"  ItemDataSource="{Binding FundBalances}"  />

                    </Grid>
                </telerik:RadTabItem>
                <telerik:RadTabItem Header="{lex:Loc Label_GLCodeOtherInfo, 'Other Info'}">



                    <Controls:DynamicGridControl HorizontalAlignment="Stretch" Margin="10" VerticalAlignment="Stretch" ItemDataSource="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=DataContext.FundInfo, Mode=TwoWay}" />

                </telerik:RadTabItem>
                <telerik:RadTabItem Header="{lex:Loc Label_Notes, 'Notes'}">


                    <Grid Height="Auto" Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
   
                        
                        <controls:AutoScrollingListView  x:Name="lstComments"  Height="auto" Margin="5" AlternationCount="2"
               ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Notes}"               
               MouseDoubleClick="ListBox_MouseDoubleClick">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid ToolTip="{Binding Value}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" Text="{Binding Header}" FontSize="11" TextWrapping="Wrap"
                         FontWeight="Bold" />
                                        <TextBlock Grid.Row="1" Text="{Binding Value}" FontSize="12" TextWrapping="Wrap" />
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </controls:AutoScrollingListView>
                        
                        <StackPanel Orientation="Vertical" Grid.Column="1" Margin="5">
                            <TextBlock  Text="{lex:Loc Label_AddComment, 'Add Comment'}"  Margin="10,4" />
                            <UI:ReadOnlyStateManager  >
                                <TextBox Text="{Binding NewComment, Mode=TwoWay}" Margin="10,4"  AcceptsReturn="True" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=DataContext.CanAddCommentBool, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                 VerticalScrollBarVisibility="Visible" TextWrapping="Wrap" MaxLength="200" Height="50"  />
                            </UI:ReadOnlyStateManager>
                            <CheckBox Visibility="Hidden" IsChecked="{Binding IsEditable, Mode=OneWay}" Content="IsEditable" Grid.Row="4" HorizontalAlignment="Left"  ></CheckBox>
                            <CheckBox Visibility="Hidden" IsChecked="{Binding IsReadOnly, Mode=OneWay}" Grid.Row="4" HorizontalAlignment="Center" Content="IsReadOnly"  ></CheckBox>
                            <Button x:Name="AddCommentButton" Style="{StaticResource SecondaryBtn}" Grid.Row="4" Command="{Binding AddCommentCommand}" Content="{lex:Loc Button_Add_Comment,'Add Comment'}" 
              HorizontalAlignment="Right" Margin="10,4" Width="140" />
                        </StackPanel>
                       
                    </Grid>

                </telerik:RadTabItem>
            <telerik:RadTabItem Header="{lex:Loc FileStorage, 'File Storage'}" Visibility="{lex:Config UploadFilesTabFund}">
                    <azure:UploadEntry Margin="10"  x:Name="UploadFile"></azure:UploadEntry>
                </telerik:RadTabItem>


            </telerik:RadTabControl>


       

        <StackPanel Orientation="Horizontal"   Grid.Row="5"  Grid.Column="0" Margin="5" VerticalAlignment="Center" >
            <Label   Content="{lex:Loc Label_Status,'Status'}"/>
            <singleSelect:SingleSelectComboBox DataSource="{Binding StatusVM}" Width="200" Height="26" />


        </StackPanel>
        <StackPanel Grid.Row="5" Grid.Column="1"
				Orientation="Horizontal" VerticalAlignment="Center"
				HorizontalAlignment="Right"
				Margin="5" >
            <Button Style="{StaticResource SecondaryBtn}" Command="{Binding SaveCommand}" Margin="4,0" Content="{lex:Loc Button_Save, 'Save'}"/>
            <Button Style="{StaticResource SecondaryBtn}" Command="{Binding SaveCloseCommand}" Margin="4,0" Content="{lex:Loc Button_SaveClose, 'Save &amp; Close'}"/>
        </StackPanel>
    </Grid>
</pages:PageBase>