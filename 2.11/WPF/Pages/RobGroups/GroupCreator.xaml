<pages:PageBase x:Class="WPF.Pages.RobGroups.GroupCreator"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:wpf="clr-namespace:WPF"
      xmlns:rowControls="clr-namespace:Exceedra.Controls.DynamicRow.Controls;assembly=Exceedra.Controls"
      xmlns:gridControls="clr-namespace:Exceedra.Controls.DynamicGrid.Controls;assembly=Exceedra.Controls"
      xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
      xmlns:treeControls="clr-namespace:WPF.UserControls.Trees.Controls"
      xmlns:pages="clr-namespace:WPF.Pages"
      xmlns:controls="clr-namespace:Exceedra.MultiSelectCombo.Controls;assembly=Exceedra.Controls"
      mc:Ignorable="d" 
                xmlns:converters="clr-namespace:Exceedra.Converters;assembly=Exceedra.Controls"
                x:Name="Test"
      d:DesignHeight="1024" d:DesignWidth="1024"
	Title="GroupCreator" Background="White"
                SizeChanged="Page_SizeChanged"
                >

    <Page.Resources>
        <converters:InverseBooleanConverter x:Key="InverseConverter" />

        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="FontWeight" Value="Normal" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="0,0,0,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Label Content="{wpf:Loc Label_RobGroupCreator, Power Creator}" FontSize="16" FontWeight="Bold" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"
                   Margin="2" VerticalAlignment="Center" Width="Auto" />

            <StackPanel Grid.Row="0" Grid.Column="2"
				Orientation="Horizontal" VerticalAlignment="Center"
				HorizontalAlignment="Right"
				Margin="5" >
                <Button Style="{StaticResource SecondaryBtn}" Command="{Binding ReloadCommand}" Margin="4,0" Content="{wpf:Loc Button_Reload, 'Reload'}"/>
                <Button Style="{StaticResource SecondaryBtn}" Command="{Binding CloseCommand}" Margin="4,0" Content="{wpf:Loc Button_Cancel, 'Cancel'}"/>
            </StackPanel>

            <GroupBox Grid.Row="1" Grid.Column="0" Grid.RowSpan="3" Padding="8" BorderBrush="Gray" BorderThickness="1" Margin="0,0,5,0">
                <GroupBox.Header>
                    <TextBlock Text="{wpf:Loc Label_Properties, Properties}"  Style="{StaticResource GlobalGroupHeaderStyle}" />
                </GroupBox.Header>

                <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <rowControls:DynamicRowControl ItemDataSource="{Binding DataContext.PropertiesRVM, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type Page}}, UpdateSourceTrigger=PropertyChanged}"
					Margin="6"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch" />
                </ScrollViewer>
            </GroupBox>



            <GroupBox Grid.Row="1" Grid.RowSpan="3" Grid.Column="1" Padding="8" BorderBrush="Gray" BorderThickness="1" Margin="5,0,5,0">
                <GroupBox.Header>
                    <TextBlock Text="{wpf:Loc Label_Impacts, Impacts}"   Style="{StaticResource GlobalGroupHeaderStyle}" />
                </GroupBox.Header>

                <telerik:RadGridView x:Name="ImpactGrid" Margin="6" AutoGenerateColumns="False" 
                                     RowIndicatorVisibility="Collapsed" IsSynchronizedWithCurrentItem="True"
                                     VerticalGridLinesBrush="#CCC" HorizontalGridLinesBrush="#CCC"
                                     CanUserInsertRows="False" CanUserResizeRows="False"
                                     telerik:StyleManager.Theme="Transparent"
                                     CanUserDeleteRows="False" ItemsSource="{Binding ViewModel.Impacts, ElementName=Test}"
                                     IsFilteringAllowed="False" ShowGroupPanel="False"     
                                     IsEnabled="{Binding ElementName=Test, Path=ViewModel.IsGroupReadOnly, Converter={StaticResource InverseConverter}}"
                                     >

                    <telerik:RadGridView.Columns>
                        <telerik:GridViewDataColumn Header="Name" DataMemberBinding="{Binding Name}"
							Width="3*" IsReadOnly="True" />

                        <telerik:GridViewDataColumn Header="Option">
                            <telerik:GridViewDataColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch">
                                        <ComboBox ItemsSource="{Binding Options}"                                                   
                                                  DisplayMemberPath="Name"
                                                  
                                                  SelectedItem="{Binding SelectedOption, Mode=TwoWay}" 
                                                  SelectionChanged="Selector_OnSelectionChanged"
                                                  />
                                    </StackPanel>
                                </DataTemplate>

                            </telerik:GridViewDataColumn.CellTemplate>
                        </telerik:GridViewDataColumn>

                        <telerik:GridViewDataColumn Header="Amount"
							DataMemberBinding="{Binding Amount, Mode=TwoWay}"
							Width="1*" />
                    </telerik:RadGridView.Columns>
                </telerik:RadGridView>
            </GroupBox>





            <GroupBox x:Name="CustGroupBox" Grid.Row="1" Grid.Column="2" Padding="8" BorderBrush="Gray" BorderThickness="1" Margin="1">
                <GroupBox.Header>
                    <TextBlock Text="{wpf:Loc Label_Customer, Customer}"  Style="{StaticResource GlobalGroupHeaderStyle}" />
                </GroupBox.Header>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel x:Name="CustLevelStack" Grid.Row="0" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" Height="Auto" Margin="5"  >
                        <Label x:Name="CustLevelLabel" Width="Auto" Content="{wpf:Loc Label_CustomerLevel, Customer Level}" />
                        <telerik:RadComboBox x:Name="CustomerLevelComboBox" VerticalAlignment="Center" Width="100"
                                             ItemsSource="{Binding CustomerLevels}" DisplayMemberPath="Name"
                                             SelectedItem="{Binding SelectedCustomerLevel}"
                                             CanAutocompleteSelectItems="True"
                                             CanKeyboardNavigationSelectItems="True"
                                             IsEditable="True"
                                             OpenDropDownOnFocus="True"
                                             IsFilteringEnabled="True"
                                             TextSearchMode="Contains"
                                             IsEnabled="{Binding ElementName=Test, Path=ViewModel.IsGroupReadOnly, Converter={StaticResource InverseConverter}}"
                                             />
                    </StackPanel>

                    <StackPanel x:Name="CustStack" Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="5">
                        <Label Width="{Binding ActualWidth, ElementName=CustLevelLabel}" Content="{wpf:Loc Label_Customer, Customer}"  />

                        <controls:MultiSelectComboBox DataSource="{Binding Customers}" IsSelectionEnabled="{Binding ElementName=Test, Path=ViewModel.IsGroupReadOnly, Converter={StaticResource InverseConverter}}" Width="150" />
                    </StackPanel>
                </Grid>



            </GroupBox>

            <Label x:Name="TreeTitle" Visibility="Collapsed" Content="{wpf:Loc Label_Products, Products}"/>
            <treeControls:TreeControl Grid.Row="2" Grid.Column="2" RightClickEnabled="True"
				Margin="5,0,0,0"
				TreeTitle="{Binding Content, ElementName=TreeTitle}" 
				TreeSource="{Binding DataContext.Products, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type Page}}, UpdateSourceTrigger=PropertyChanged}"
				UseNewStyle="True"
                                      />

            <Button Style="{StaticResource SecondaryBtn}" Grid.Row="3" Grid.Column="2" Width="100" HorizontalAlignment="Right" Margin="5" Content="{wpf:Loc Label_Apply, Apply}" Command="{Binding ApplyCommand}" />

        </Grid>

        <GridSplitter ResizeDirection="Rows" Grid.Row="1" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" />

        <Grid Grid.Row="2" Margin="0,10,0,0">
            <gridControls:DynamicGridControl x:Name="ROBGroupDynamicGrid" ItemDataSource="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=DataContext.ROBGroupRVM, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>

        <Grid Grid.Row="3" Margin="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="{wpf:Loc Label_Scenarios, Scenarios}"/>
                <controls:MultiSelectComboBox DataSource="{Binding AvailableScenarios}" 
                                              HorizontalAlignment="Left"
                                              IsSelectionEnabled="True"
                                              Width="140"
                                              Grid.Column="1"
                                              Margin="16,0,0,0"
                                              />
            </Grid>
            <Grid Grid.Column="1" Margin="0,0,16,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="{wpf:Loc Label_Status, Status}"/>
                <ComboBox Height="25"
            		ItemsSource="{Binding AvailableStatuses}" 
            		DisplayMemberPath="Name" 
            		SelectedItem="{Binding SelectedStatus}" 
            		Width="140" HorizontalAlignment="Right" d:LayoutOverrides="Width" Grid.Column="1" Margin="16,0,0,0"/>
            </Grid>

            <StackPanel Grid.Column="2"
                        Orientation="Horizontal" VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        Margin="5" >
                <Button Style="{StaticResource SecondaryBtn}" Command="{Binding SaveCommand}" Margin="4,0" Content="{wpf:Loc Button_Save, 'Save'}"/>
                <Button Style="{StaticResource SecondaryBtn}" Command="{Binding SaveCloseCommand}" Margin="4,0" Content="{wpf:Loc Button_SaveClose, 'Save &amp; Close'}"/>
            </StackPanel>
        </Grid>
    </Grid>
</pages:PageBase>
