<Page x:Class="WPF.Pages.EventEditorPage"
	 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	  xmlns:userControls="clr-namespace:WPF.UserControls" 
      xmlns:Controls="clr-namespace:Exceedra.Controls.DynamicGrid.Controls;assembly=Exceedra.Controls" 
	   mc:Ignorable="d" d:DesignHeight="550" d:DesignWidth="960" 
        xmlns:lex="clr-namespace:WPF"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        xmlns:azure="clr-namespace:Exceedra.Controls.Storage.Azure;assembly=Exceedra.Controls"
        Title="EventEditorPage">
    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
        <lex:ImageUrlConverter x:Key="imageUrlConverter" />

        <Style TargetType="ComboBox">
            <Setter Property="Height" Value="22" />
        </Style>
        <Style x:Key="LinkButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <TextBlock TextDecorations="Underline">
				<ContentPresenter /></TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="Blue" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>
    <Grid  Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="350"></ColumnDefinition>
            <ColumnDefinition Width="3"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0" Grid.Column="0" Margin="0,0,5,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="3"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Grid.Column="0"   Margin="0,0,0,5">
                <StackPanel  Style="{StaticResource GlobalStackPanelStyle}" >
                    <Label Content="{lex:Loc Label_ClaimEventDetails,'Event Details'}" FontSize="16"  ></Label>
                </StackPanel>

                <telerik:RadTabControl>
                    <telerik:RadTabItem x:Name="RadTabItem" Header="{lex:Loc Label_Claim_Event_Main,'Main'}" Height="25">
                    
                    <Grid ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <!--<RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>-->
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="130"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Text="{lex:Loc Label_EventName}"></TextBlock>
                    <TextBlock Grid.Row="0" Grid.Column="1"  HorizontalAlignment="left" VerticalAlignment="Center" Height="20" Text="{Binding Path=EventDetail.Event_Name}" TextWrapping="WrapWithOverflow"></TextBlock>

                    <TextBlock  Grid.Row="1"   HorizontalAlignment="Left" Grid.Column="0" Text="{lex:Loc Label_StartDate}" VerticalAlignment="Center" />
                    <TextBlock Grid.Row="1"   HorizontalAlignment="Left" Text="{Binding Path=EventDetail.Event_Start_Date}"  Grid.Column="1"  VerticalAlignment="Center"/>

                    <TextBlock  Grid.Row="2" Grid.Column="0" Text="{lex:Loc Label_EndDate}"  HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    <TextBlock Grid.Row="2" Text="{Binding Path=EventDetail.Event_End_Date}"  HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" />

                    <TextBlock Grid.Row="3" Text="{lex:Loc Label_EventType}" Grid.Column="0"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20"></TextBlock>
                    <TextBlock Grid.Row="3" Grid.Column="1"  HorizontalAlignment="Left" VerticalAlignment="Center"  Text="{Binding Path=EventDetail.Event_Type}" TextWrapping="WrapWithOverflow"></TextBlock>

                    <TextBlock Grid.Row="4" Text="{lex:Loc Label_EventSubType}" Grid.Column="0"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20"></TextBlock>
                    <TextBlock Grid.Row="4" Grid.Column="1"  HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Path=EventDetail.Event_Sub_Type}" TextWrapping="WrapWithOverflow"></TextBlock>

                    <TextBlock Grid.Row="5" Text="{lex:Loc Label_EventStatus}" Grid.Column="0"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20"></TextBlock>
                    <ComboBox  Grid.Row="5" Grid.Column="1"  Width="180" HorizontalAlignment="Left" VerticalAlignment="Center" ItemsSource="{Binding AllowedEventStatuses}" SelectedItem="{Binding SelectedAllowedEventStatus, Mode=TwoWay}" DisplayMemberPath="EventStatusName"/>

                    <TextBlock Grid.Row="6" Text="{lex:Loc Label_TotalAccrual}" Grid.Column="0"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20"></TextBlock>
                    <TextBlock Grid.Row="6" Grid.Column="1"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Text="{Binding Path=EventDetail.Total_Accrual}"></TextBlock>

                    <TextBlock Grid.Row="7" Text="{lex:Loc Label_Settled}"  Grid.Column="0"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20"></TextBlock>
                    <TextBlock Grid.Row="7" Grid.Column="1"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Text="{Binding Path=SettledValue}"></TextBlock>

                    <TextBlock Grid.Row="8" Text="{lex:Loc Label_TotalAdjustment}" Grid.Column="0"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20"></TextBlock>
                    <TextBlock Grid.Row="8" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"  Height="20" Text="{Binding EventAdjustment}"/>

                    <!--<TextBlock Grid.Row="7" Grid.Column="0"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20">Total Adjustment</TextBlock>
                    <TextBlock Grid.Row="7" Grid.Column="1"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Text="{Binding Path=EventDetail.TotalAdjustment}"></TextBlock>-->


                    <TextBlock Grid.Row="9" Grid.Column="0"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20">Available Accrual</TextBlock>
                    <TextBlock Grid.Row="9" Grid.Column="1"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Text="{Binding Path=AvailableAccrual}"></TextBlock>

                    <!--<TextBlock  Grid.Row="8" Grid.Column="0" Text="End date:" />
                    <DatePicker Grid.Row="8" SelectedDate="{Binding Path=EventDetail.MatchedClaims, Mode=TwoWay}"  Grid.Column="1" Margin="0,1,0,1"  />-->


                    <!--<StackPanel Grid.Row="10" Grid.Column="0" Grid.ColumnSpan="2" >
                        	
                    </StackPanel>-->



                    <!--<TextBlock Grid.Row="9" Grid.Column="0" Text="Start date:"  VerticalAlignment="Center"/>
					<DatePicker SelectedDate="{Binding Path=EventDetail.StartDate, Mode=TwoWay}" Grid.Row="9" Grid.Column="1" Margin="0,1,0,1"  />-->




                    <!--<TextBlock Grid.Row="11" Grid.Column="0"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20">Settlement Reason Code</TextBlock>
					<ComboBox Grid.Row="11" Grid.Column="1" Width="180" HorizontalAlignment="Left" VerticalAlignment="Center" ItemsSource="{Binding ReasonCodes}" SelectedItem="{Binding SelectedReasonCode, Mode=TwoWay}" DisplayMemberPath="ReasonCodeName"/>-->

                </Grid>

                    </telerik:RadTabItem>

                    <telerik:RadTabItem x:Name="RadTabItem2" Header="{lex:Loc Label_Claim_Event_Files,'Files'}" Height="25" Visibility="{lex:Config UploadFilesTabClaimsEvents}">
                    <azure:UploadEntry x:Name="UploadFile"></azure:UploadEntry>
                </telerik:RadTabItem>
                    
                </telerik:RadTabControl>
            </StackPanel>
            <GridSplitter x:Name="spltleft" Grid.Row="1"  ResizeDirection="Auto" Grid.Column="1" Height="3"
			Width="Auto" VerticalAlignment="Center" HorizontalAlignment="Stretch" ResizeBehavior="BasedOnAlignment" Margin="0" />
            <StackPanel Grid.Row="2" Grid.Column="0"  Margin="0,5,0,5">
                <StackPanel  Style="{StaticResource GlobalStackPanelStyle}" >
                    <Label Content="{lex:Loc Label_ClaimEventComments,'Event Comments'}" FontSize="16"  ></Label>
                </StackPanel>
                <ListBox x:Name="claimComments" MinHeight="50" AlternationCount="2" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding EventComments}" >
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid ToolTip="{Binding Value}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{Binding Header}" FontSize="11" TextWrapping="Wrap"
						 FontWeight="Bold" />
                                <TextBlock Grid.Row="1" Text="{Binding Value}" FontSize="12" TextWrapping="Wrap" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
            <Grid Grid.Row="3" Grid.Column="0" Margin="0,1,0,1">
                <TextBox Grid.Row="0" Grid.Column="0" Margin="2"  HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="200" Text="{Binding EventComment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Style="{StaticResource SecondaryBtn}" Grid.Row="0" Grid.Column="1" Content="{lex:Loc Button_Add}" Width="80" HorizontalAlignment="right" IsEnabled="{Binding EventCommentIsNotEmpty}" Command="{Binding AddEventCommentCommand}" Height="20"/>
            </Grid>
        </Grid>
        <GridSplitter x:Name="splt1"  ResizeDirection="Columns" Grid.Column="1" Width="3"
			Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Stretch" ResizeBehavior="BasedOnAlignment" Margin="0" />
        <Grid Grid.Row="0" Grid.Column="2" Margin="10,0,10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="3"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="3"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <StackPanel  Grid.Row="0" Orientation="Horizontal"  Margin="5" HorizontalAlignment="Right" VerticalAlignment="Top">
                <Button Style="{StaticResource SecondaryBtn}" Width="100" Command="{Binding ReloadCommand}" Content="{lex:Loc Button_Reload, 'Reload'}" Margin="4,0" />
                <Button Style="{StaticResource SecondaryBtn}" Width="100" Command="{Binding CancelCommand}" Content="{lex:Loc Button_Cancel, 'Cancel'}" Margin="4,0" />
            </StackPanel>

            <Controls:DynamicGridControl x:Name="G1" 
                                    CanSort="False"                                 
                                    Grid.Row="1"
                                    HorizontalAlignment="Stretch"   VerticalAlignment="Stretch"
                                    ItemDataSource="{Binding EventEditor_G1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               />
            
            <GridSplitter x:Name="spltR1" Grid.Row="2"  ResizeDirection="Auto" Height="3"
			Width="Auto" VerticalAlignment="Center" HorizontalAlignment="Stretch" ResizeBehavior="BasedOnAlignment" Margin="0" />
            
                <Controls:DynamicGridControl x:Name="G2" Grid.Row="3" 
                                    CanSort="False"                                 
                                    Visibility="Collapsed"
                                    HorizontalAlignment="Stretch"   VerticalAlignment="Stretch"
                                    ItemDataSource="{Binding EventEditor_G2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               />
            
            <GridSplitter x:Name="spltR2" Grid.Row="4"  ResizeDirection="Auto" Height="3"
			Width="Auto" VerticalAlignment="Center" HorizontalAlignment="Stretch" ResizeBehavior="BasedOnAlignment" Margin="0" />
            <Grid Grid.Row="5"   Margin="0,5,0,5">
                <StackPanel   >
                  
                    <DataGrid x:Name="EventAccrualGrid" 
                                CurrentCellChanged="EventAccrualGrid_CurrentCellChanged"
								  Grid.Row="1" 
								  AutoGenerateColumns="False" 
								  SelectionUnit="Cell" 
								  Canvas.ZIndex="0"                                  
								  IsSynchronizedWithCurrentItem="True" 
								  VerticalGridLinesBrush="#CCC" 
								  HorizontalGridLinesBrush="#CCC"
								  CanUserAddRows="True" 
								  CanUserResizeRows="False" 
								  CanUserDeleteRows="False"
								  ItemsSource="{Binding Adjustments}" 
								  RowHeight="25" 
								  ScrollViewer.CanContentScroll="True" 
								  ScrollViewer.VerticalScrollBarVisibility="Auto"
								  ScrollViewer.HorizontalScrollBarVisibility="Auto">
                        <DataGrid.Resources>
                            <!--
							SINGLE CLICK EDITING
						 -->
                            <Style TargetType="{x:Type DataGridCell}">
                                <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridCell_PreviewMouseLeftButtonDown"></EventSetter>
                            </Style>
                            <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                                <Setter Property="Padding" Value="-2"/>
                                <Style.Triggers>
                                    <Trigger Property="Validation.HasError" Value="True">
                                        <Setter Property="Background" Value="Red"/>
                                        <Setter Property="ToolTip" 
									  Value="{Binding RelativeSource={RelativeSource Self},
										Path=(Validation.Errors)[0].ErrorContent}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>

                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="id"  IsReadOnly="True" Binding="{Binding Path=Adjustment_Row_Idx}"/>
                            <DataGridTemplateColumn Header="Start Date" MinWidth="120">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Adjustment_Start_Date_Format, UpdateSourceTrigger=PropertyChanged}" Width="80"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding Path=Adjustment_Start_Date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="End Date" MinWidth="120">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Adjustment_End_Date_Format, UpdateSourceTrigger=PropertyChanged}" Width="100" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding Path=Adjustment_End_Date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" >
                                        </DatePicker>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>


                            <userControls:DataGridNumericColumn_INT Header="Amount" MinWidth="120" Binding="{Binding Path=Adjustment_Value, Mode=TwoWay,ValidatesOnExceptions=True, StringFormat=d, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="Comment" MinWidth="200" Width="*"   Binding="{Binding Path=Adjustment_Comment, Mode=TwoWay}"/>
                            <DataGridTextColumn Header="User" MinWidth="200" IsReadOnly="True" Binding="{Binding Path=Adjustment_User}"/>
                            <DataGridTextColumn Header="Last Altered Date" MinWidth="200" IsReadOnly="True" Binding="{Binding Path=Adjustment_Create_Date }"/>
                        </DataGrid.Columns>
                    </DataGrid>

                </StackPanel>
            </Grid>
            <Grid Grid.Row="6"  Margin="0,5,0,5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="170"></ColumnDefinition>
                    <ColumnDefinition Width="130"></ColumnDefinition>

                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="100"></ColumnDefinition>
                    <ColumnDefinition Width="100"></ColumnDefinition>
                </Grid.ColumnDefinitions>


                <CheckBox  Grid.Column="0" Content="{lex:Loc Label_ShowZeroAppointments}" HorizontalAlignment="Left"  VerticalAlignment="Center" 
                            IsChecked="{Binding ShowZeroApportionments}"  Command="{Binding ShowZeroCommand}"/>
                <Button Style="{StaticResource SecondaryBtn}" Grid.Column="1" x:Name="accrualBut" Content="{lex:Loc Button_OpenReport}" Click="Button_Click" Width="120" HorizontalAlignment="Right"  
                                     Visibility="{Binding Path=HasReport, Converter={StaticResource BoolToVisConverter}}" ></Button>

                <Button Style="{StaticResource SecondaryBtn}" Grid.Column="3" Margin="4,0" Grid.Row="0" Content="{lex:Loc Button_SaveClose, 'Save &amp; Close'}" Command="{Binding SaveCloseCommand}" Height="20" Width="100"  />
                <Button Style="{StaticResource SecondaryBtn}" Grid.Column="4" Margin="4,0" Grid.Row="0" Content="{lex:Loc Button_Save}" Command="{Binding SaveEventCommand}" IsEnabled="{Binding CanSave}" Height="20" Width="100" />

            </Grid>
        </Grid>
        <Grid x:Name="PopupGrid" Visibility="Collapsed" Grid.Column="0" Grid.ColumnSpan="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="4*" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="4*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Border Background="Black" Opacity="0.5" Grid.ColumnSpan="3" Grid.RowSpan="4" />
            <Border Grid.Column="1" Grid.Row="2" BorderThickness="1" BorderBrush="Black" Background="White">

                <Frame Panel.ZIndex="0" Grid.Row="1"  Source="{Binding ReportURL}" NavigationFailed="Frame_NavigationFailed" Navigating="Frame_Navigating"  />
            </Border>
            <Border Grid.Column="1" Grid.Row="1" BorderThickness="1" BorderBrush="Black" Background="Black"
			  CornerRadius="4 4 0 0">
                <Grid Margin="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="PopupTitleTextBlock" FontSize="12" Text="Report" Foreground="White" />
                    <Image Canvas.ZIndex="100" Grid.Column="1" Width="20" Height="20"
				 Source="{Binding Converter={StaticResource imageUrlConverter}, ConverterParameter='close.gif'}" MouseDown="Image_MouseDown" />
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Page>