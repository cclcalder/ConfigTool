<UserControl x:Class="WPF.UserControls.Trees.Controls.TreeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:wpf="clr-namespace:WPF"
             xmlns:userControls="clr-namespace:WPF.UserControls"
             xmlns:controls="clr-namespace:WPF.UserControls.Trees.Controls"
             xmlns:buttons="clr-namespace:Exceedra.Buttons;assembly=Exceedra.Controls"
             mc:Ignorable="d"  Background="White"
             d:DesignHeight="300" d:DesignWidth="300"
             x:Name="Tree">


    <UserControl.Resources>
        <wpf:ImageUrlConverter x:Key="imageUrlConverter" />
        <wpf:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <wpf:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter"/>
        <wpf:BoolToSelectionModeConverter x:Key="BoolToSelectionModeConverter" />

        <Style x:Key="StatusItemContainerStyle" TargetType="{x:Type telerik:RadTreeViewItem}" BasedOn="{StaticResource RadTreeViewItemStyle}">

            <Style.Resources>

                <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CheckBoxStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsReadOnly, ElementName=Tree}" Value="True">
                            <Setter Property="IsHitTestVisible" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CheckSafe, ElementName=Tree}" Value="False">
                            <Setter Property="IsHitTestVisible" Value="False"/>
                        </DataTrigger>
                        <!--This is for disabling individual nodes in the tree-->
                        <DataTrigger Binding="{Binding IsSelectable}" Value="False">
                            <Setter Property="IsHitTestVisible" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource RadioButtonStyle}">
                    <Setter Property="IsHitTestVisible" Value="{Binding Path=IsReadOnly, ElementName=Tree, Converter={StaticResource InverseConverter}}" />
                </Style>

            </Style.Resources>

            <!--This is for disabling individual nodes in the tree-->
            <!--<Setter Property="IsHitTestVisible" Value="{Binding IsSelectable, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />-->

            <Setter Property="Background" Value="Transparent" />

            <Setter Property="AutomationProperties.Name" Value="{Binding Name}"/>

            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>

            <Setter Property="BorderThickness" Value="4,1,1,1" />

            <Setter Property="CheckState" 
                    Value="{Binding IsSelectedBool, Converter={StaticResource BoolToToggleStateConv}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <Setter Property="IsExpanded"
                    Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <Setter Property="IsSelected" Value="{Binding SingleSelectedItem, Mode=TwoWay}" />

            <Style.Triggers>

                <!--not parent; read only-->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsParentNode}" Value="False"/>
                        <Condition Binding="{Binding Path=IsReadOnly, ElementName=Tree}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Foreground" Value="#FFB3B3B3" />
                </MultiDataTrigger>
                <!--parent; read only-->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsParentNode}" Value="True"/>
                        <Condition Binding="{Binding Path=IsReadOnly, ElementName=Tree}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Foreground" Value="#FFFF7530" />
                </MultiDataTrigger>
                <!--not parent; not read only-->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsParentNode}" Value="False"/>
                        <Condition Binding="{Binding Path=IsReadOnly, ElementName=Tree}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Foreground" Value="Black" />
                </MultiDataTrigger>
                <!--parent; not read only-->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsParentNode}" Value="True"/>
                        <Condition Binding="{Binding Path=IsReadOnly, ElementName=Tree}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Foreground" Value="OrangeRed" />
                </MultiDataTrigger>

                <DataTrigger Binding="{Binding Colour, Converter={StaticResource IsNullConverter} }" Value="false">
                    <Setter Property="BorderBrush" Value="{Binding Colour}" />
                </DataTrigger>

                <DataTrigger Binding="{Binding Colour, Converter={StaticResource IsNullConverter} }" Value="true">
                    <Setter Property="BorderBrush" Value="Transparent" />
                </DataTrigger>

                <!--<DataTrigger Binding="{Binding IsSelectedBool, Converter={StaticResource IsNullConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="false" >
                    <Setter Property="Foreground" Value="Red"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelectedBool, Converter={StaticResource IsNullConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="true" >
                    <Setter Property="Foreground" Value="Green"></Setter>
                </DataTrigger>-->

            </Style.Triggers>

        </Style>

        <controls:TreeNodeTemplateSelector x:Key="TreeNodeTemplateSelector">
            
            <controls:TreeNodeTemplateSelector.DefaultNodeTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <TextBlock Text="{Binding Name}" Background="{Binding StringBackground, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <telerik:RadContextMenu.ContextMenu >
                        	<telerik:RadContextMenu x:Name="ItemContextMenu" Opened="RadContextMenu_Opened">
                        		<telerik:RadMenuItem Header="Toggle - plan at this level"  />
                        	</telerik:RadContextMenu>
                        </telerik:RadContextMenu.ContextMenu>
                    </TextBlock>
                </HierarchicalDataTemplate>
            </controls:TreeNodeTemplateSelector.DefaultNodeTemplate>
            
            <controls:TreeNodeTemplateSelector.DateNodeTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <!--Setting fixed width for all date pickers-->
                            <ColumnDefinition Width="102"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="Name" Text="{Binding Name}" Background="{Binding StringBackground, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center">
                            <telerik:RadContextMenu.ContextMenu >
                            	<telerik:RadContextMenu x:Name="ItemContextMenu" Opened="RadContextMenu_Opened" >
                            		<telerik:RadMenuItem Header="Toggle - plan at this level"  />
                            	</telerik:RadContextMenu>
                            </telerik:RadContextMenu.ContextMenu>
                        </TextBlock>
                        <!--
                        Height is bound so the date picker is the same height as the text block (normally is a bit bigger).
                        SelectedDateChanged handles setting dates of a node's children and parent according to the current node selection made by a user.
                        Tag holds the item idx so the node can be recognised in the SelectedDateChanged event handler.
                        -->
                        <DatePicker Grid.Column="1" SelectedDate="{Binding Date}" Height="{Binding Height, ElementName=Name}" BorderThickness="0" SelectedDateChanged="DatePicker_OnSelectedDateChanged" Tag="{Binding Idx}"/>
                    </Grid>
                </HierarchicalDataTemplate>
            </controls:TreeNodeTemplateSelector.DateNodeTemplate>



            <controls:TreeNodeTemplateSelector.AddNodeTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <buttons:PlusButton Grid.Column="0" Height="12" Width="12" Visibility="{Binding IsSelectable, Converter={StaticResource BoolToVisibilityConverter}}" CommandParameter="{Binding}" Command="{Binding ElementName=Tree, Path=TreeSource.AddButtonCommand}" />
                        <buttons:CrossButton Grid.Column="0" Height="12" Width="12" Visibility="{Binding IsSelectable, Converter={StaticResource InvertedBoolToVisibilityConverter}}" CommandParameter="{Binding}" Command="{Binding ElementName=Tree, Path=TreeSource.DeleteButtonCommand}" />

                        <TextBlock x:Name="ButtonName" Grid.Column="1" Text="{Binding Name}" Background="{Binding StringBackground, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                    </Grid>
                </HierarchicalDataTemplate>
            </controls:TreeNodeTemplateSelector.AddNodeTemplate>

        </controls:TreeNodeTemplateSelector>

    </UserControl.Resources>

    <Grid>
        <GroupBox BorderThickness="1" BorderBrush="Gray" x:Name="Border1" d:IsHidden="True" >
            <!--Visibility="{Binding UseNewStyle, Converter={StaticResource BoolToVisConverter}, ElementName=Tree, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->
            <GroupBox.Header>
                <TextBlock x:Name="TreeNameNew" Style="{StaticResource GlobalGroupHeaderStyle}"  />
            </GroupBox.Header>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>

                    <TextBox BorderThickness="0" Grid.Column="0" x:Name="SearchTextBoxNew" KeyUp="SearchTextBox_KeyDown" />

                    <buttons:CrossButton Grid.Column="1" Height="12" Width="12" Click="UIElement_OnMouseDown"  />

                    <buttons:SearchButton Grid.Column="2" Height="12" Width="12" Click="Image_MouseDown"  />


                    <!--<Image HorizontalAlignment="Right" Width="16" Height="16" ToolTip="Search using filter"
                           x:Name="imgSearch1" Stretch="None" Grid.Column="2" MouseDown="Image_MouseDown"
                           Source="{Binding Converter={StaticResource imageUrlConverter}, ConverterParameter='search.gif'}" />-->
                </Grid>

                <Rectangle Stroke="Gray" Grid.Row="1" Height="1" />

                <Grid Grid.Row="2" Margin="0,4,0,0">
                    <userControls:LoadingPanel x:Name="Loading2" IsLoading="{Binding ElementName=Tree, Path=TreeSource.IsTreeLoading}" Panel.ZIndex="1" Grid.Row="0" Grid.Column="0" />

                    <!-- RadTreeView events http://docs.telerik.com/devtools/silverlight/controls/radtreeview/events/overview -->
                    <telerik:RadTreeView
                        IsOptionElementsEnabled="{Binding IsSingleSelect, Converter={StaticResource InvertedBooleanConverter}, ElementName=Tree, Mode=TwoWay}"
        				telerik:AnimationManager.IsAnimationEnabled="False"
        				SelectionMode="{Binding IsSingleSelect, Converter={StaticResource BoolToSelectionModeConverter}, ElementName=Tree, Mode=TwoWay}"
        				IsTriStateMode="{Binding IsSingleSelect, Converter={StaticResource InvertedBooleanConverter}, ElementName=Tree, Mode=TwoWay}"
        				x:Name="MainRadTreeViewNew"
        				IsVirtualizing="True"
        				Checked="TreeView_OnChecked"
        				Unchecked="TreeView_OnChecked"
        				PreviewSelectionChanged="SingleSelect_OnPreviewSelected"
        				Selected="SingleSelect_OnSelected"
        				Unselected="SingleSelect_OnUnselected"
        				ItemClick="TreeView_OnItemClick"
        				ItemsSource="{Binding ElementName=Tree, Path=TreeSource.ListTree, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        				ItemContainerStyle="{StaticResource StatusItemContainerStyle}"
        				Visibility="{Binding ElementName=Tree, Path=TreeSource.IsTreeLoading, Converter={StaticResource InvertedBoolToVisibilityConverter}}" 
                        ItemTemplateSelector="{StaticResource TreeNodeTemplateSelector}"
                        >

                    </telerik:RadTreeView>

                </Grid>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
    