<Page x:Class="WPF.PromoTemplates.TemplateCustomer" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:my="clr-namespace:Coder.WPF.UI;assembly=Coder.UI.WPF" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:wizard="clr-namespace:WPF.PromoTemplates"
    
      mc:Ignorable="d"  d:DesignHeight="365.838" d:DesignWidth="937.267"
      Title="Customer"
         xmlns:lex="clr-namespace:WPF"
         xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
         xmlns:converters="clr-namespace:WPF.Converters"
         xmlns:controls="clr-namespace:WPF.UserControls.Trees.Controls">

    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVis" />
        <lex:InverseBooleanConverter x:Key="InverseConverter"></lex:InverseBooleanConverter>
        <converters:BoolToToggleStateConverter x:Key="boolToToggleStateConv" />
        <Style x:Key="ItemContainerStyle" TargetType="{x:Type telerik:RadTreeViewItem}" BasedOn="{StaticResource RadTreeViewItemStyle}">

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected2}" Value="True">
                    <Setter Property="Foreground" Value="OrangeRed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected2}" Value="False">
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>
            </Style.Triggers>

            <Setter Property="IsHitTestVisible" Value="{Binding ElementName=ReadOnlyStateManager, Path=IsReadOnly, Mode=OneWay, Converter={StaticResource InverseConverter}, UpdateSourceTrigger=PropertyChanged}"></Setter>

            <Setter Property="Background" Value="White" ></Setter>
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></Setter>
            <Setter Property="CheckState" Value="{Binding IsSelectedBool, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToToggleStateConv}}"  />
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  />
        </Style>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" />
                <ColumnDefinition Width="3" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Background="LightGray">
                <wizard:TemplateWizardLeftMenu />
            </Grid>
            <GridSplitter x:Name="splt1"  ResizeDirection="Columns" Grid.Column="1" Width="3"
			Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Stretch" ResizeBehavior="BasedOnAlignment" Margin="0" />

            <my:ReadOnlyStateManager x:Name="ReadOnlyStateManager" Grid.Column="2" IsReadOnly="{Binding IsReadOnly, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                <Grid Background="White" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="300*" />

                        <RowDefinition Height="40" />
                    </Grid.RowDefinitions>
                    <TextBlock Text="{lex:Loc Label_Name}" FontSize="16" Grid.Row="0" Margin="10" />
                    <StackPanel Orientation="Horizontal" Grid.Row="0"  HorizontalAlignment="Right" >
                        <Button Name="CancelReload" Content="{lex:Loc Button_Reload, 'Reload'}" Width="80" 
                            Margin="8"
                                  IsEnabled="{Binding IsEditable}"
                                Command="{Binding ReloadCommand}" />
                        <Button   Name="CancelNext" Content="{lex:Loc Button_Cancel, 'Cancel'}" Width="80" 
                            HorizontalAlignment="Right" Margin="8"
                                Command="{Binding CancelCommand}" />
                    </StackPanel>
                    <Grid Grid.Row="1" Margin="0,6">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <TextBox Grid.Row="1" Margin="8,0,0,10" Height="24" Width="400" HorizontalAlignment="Left"
                      Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                    <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>



                        <controls:TreeControl Grid.Column="0" Grid.Row="0" TreeTitle="{lex:Loc Label_Customers, Customers}"
                                              UseNewStyle="True" RightClickEnabled="True"
                                              TreeSource="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=DataContext.CustomersTree, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                              />


                        <Grid Grid.Column="1" Visibility="{Binding IsSubCustomerActive, Converter={StaticResource boolToVis}}" Margin="20,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                            <controls:TreeControl Grid.Column="0" Grid.Row="0" TreeTitle="{lex:Loc Label_SubCustomers, SubCustomers}"
                                                  UseNewStyle="True"
                                                      TreeSource="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=DataContext.SubCustomersTreeInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                      />
                                        

                                <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="8">
                                    <Button Command="{Binding UploadSubCustomersViaCsvCommand}" 
                                            CommandParameter="{Binding HaveVisibleSubCustomers}" Content="{lex:Loc Button_LoadFromCsv, 'Load from csv'}"
                                            IsEnabled="{Binding CurrentTemplate.IsEditable}" 
                                            Style="{StaticResource Standard}"/>
                                </StackPanel>
                            </Grid>
                    </Grid>

                    <Grid Grid.Row="3" Margin="6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />

                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1" Margin="4" VerticalAlignment="Center"
                                   Text="{lex:Loc Label_Status}" />
                        <TextBlock Grid.Column="2" Margin="4" VerticalAlignment="Center" HorizontalAlignment="Left"
                                   Text="{Binding SelectedStatus.Name}" />
                        <!--<Button Grid.Column="3" Name="btnCancel" Content="{lex:Loc Button_Back, 'Back'}" Width="80"
                                Command="{Binding BackCommand}" />-->
                        <Button Grid.Column="4" Name="btnNext" Content="{lex:Loc Button_Next, 'Next'}" Width="80" Margin="4,0"
                                Command="{Binding NextCommand}" />

                    </Grid>
                </Grid>
            </my:ReadOnlyStateManager>

        </Grid>
        <wizard:StatusBarControl Grid.Row="1" />

    </Grid>
</Page>