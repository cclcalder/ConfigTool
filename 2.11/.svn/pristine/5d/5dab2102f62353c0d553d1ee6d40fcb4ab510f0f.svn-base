<Page xmlns:Controls="clr-namespace:Exceedra.Controls.DynamicGrid.Controls;assembly=Exceedra.Controls"  x:Class="WPF.PromoTemplates.Volumes" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:wizard="clr-namespace:WPF.PromoTemplates"
	  xmlns:UserControls="clr-namespace:WPF.UserControls" xmlns:UI="clr-namespace:Coder.WPF.UI;assembly=Coder.UI.WPF"
	  xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" xmlns:converter="clr-namespace:WPF"
	  mc:Ignorable="d" d:DesignHeight="296" d:DesignWidth="1280" Title="Volumes"   xmlns:lex="clr-namespace:WPF"
        
        >
    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVis" />
        <converter:InverseBooleanConverter x:Key="InverseConverter"></converter:InverseBooleanConverter>
    </Page.Resources>
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" />
                <ColumnDefinition Width="3" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Background="LightGray">
                <wizard:WizardLeftMenu />
            </Grid>
            <GridSplitter x:Name="splt1"  ResizeDirection="Columns" Grid.Column="1" Width="3"
			Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Stretch" ResizeBehavior="BasedOnAlignment" Margin="0" />
            <UI:ReadOnlyStateManager Grid.Row="0" Grid.Column="2" IsReadOnly="{Binding CurrentPromotion.IsReadOnly}">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="40" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="{lex:Loc Label_VolumeAdjust,'Volumes'}" FontSize="16" Margin="10" />
                    <StackPanel Orientation="Horizontal" Grid.Row="0"  HorizontalAlignment="Right" >
                        <Button Name="CancelReload" Content="{lex:Loc Button_Reload, 'Reload'}" Width="80" 
                            Margin="8"
                                IsEnabled="{Binding CurrentPromotion.IsEditable}"
                                Command="{Binding ReloadCommand}" />
                        <Button   Name="CancelNext" Content="{lex:Loc Button_Cancel, 'Cancel'}" Width="80" 
                            HorizontalAlignment="Right" Margin="8"
                                Command="{Binding CancelCommand}" />
                    </StackPanel>
                    <Grid Grid.Row="1" Margin="10">
                        <Grid.RowDefinitions>
                         

                            <RowDefinition Height="*" />

                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                     


                        <ScrollViewer   Grid.ColumnSpan="3"  Name="ScrollViewer1" VerticalScrollBarVisibility="Auto"
                                       HorizontalScrollBarVisibility="Auto" Height="auto" CanContentScroll="False" MaxWidth="2500">


                                <StackPanel Grid.Row="1" Grid.ColumnSpan="3" Orientation="Vertical">
                                    <Grid Grid.Row="3" Grid.ColumnSpan="3" x:Name="displayGrid" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="60"></ColumnDefinition>
                                            <ColumnDefinition Width="225"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                    <!---->
                                    <Controls:DynamicGridControl x:Name="dynamicDisplay" Margin="6" 
                                    CanSort="False"                                 
                                    IsReadOnly="{Binding CurrentPromotion.IsEditable, Converter={StaticResource InverseConverter}}"
                                    HorizontalAlignment="Stretch"   VerticalAlignment="Stretch"
                                    ItemDataSource="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=DataContext.DisplayVolumesRVM, Mode=TwoWay}"
                               />
                                    <!---->

                                    <Button  Grid.Column="1" Margin="0,6,6,6" Click="Button_Click" Height="25" VerticalAlignment="Bottom" 
                                           IsEnabled="{Binding CurrentPromotion.IsEditable}"
                                             >
                                      <Image Source="/images/refresh.png" Stretch="Uniform"></Image>
                                </Button>
                                 
                                <StackPanel Grid.Column="3" HorizontalAlignment="Right" Orientation="Horizontal">
                                    <Button Content="{lex:Loc Button_DailyVolumes}" Width="95" Height="30" Margin="10,0" Command="{Binding DailyPromotionCommand}" 
									Visibility="{Binding Configuration.IsDailyVolumePhasingActive, Converter={StaticResource boolToVis}}"/>
                                    <Button Content="{lex:Loc Button_WeeklyVolumes}" Width="95" Height="30" Margin="10,0" Command="{Binding WeeklyPromotionCommand}"
									Visibility="{Binding Configuration.IsWeeklyVolumePhasingActive, Converter={StaticResource boolToVis}}"/>
                                </StackPanel>

                            </Grid>
 
                            <ItemsControl   ItemsSource="{Binding PromotionVolumeOperations, Mode=TwoWay}" Grid.ColumnSpan="3" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" >
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel></WrapPanel>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>


                                        <Grid Margin="10"  >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="300"></ColumnDefinition>
                                                <ColumnDefinition Width="100"></ColumnDefinition>
                                                <ColumnDefinition Width="50"></ColumnDefinition>

                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" Content="{Binding LabelText}"></Label>
                                            <TextBox Grid.Column="1" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsEnabled}"></TextBox>
                                            <Button Grid.Column="2" 
												Command="{Binding DataContext.ApplyPromotionVolumeOperationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}">Apply</Button>
                                        </Grid>


                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <!--<CheckBox HorizontalAlignment="Right" Margin="0,10,10,0" IsChecked="{Binding KeepVolumeOperationsUpdated}" Visibility="{Binding PromotionVolumeOperationsCount, 
                                    ter={StaticResource boolToVis}}" Content="Keep volumes updated" Grid.ColumnSpan="3"></CheckBox>-->

                                    <Controls:DynamicGridControl x:Name="dynamicVolumes" Margin="6"  IsReadOnly="{Binding CurrentPromotion.IsReadOnly}"  
                                                          CanSort="False"
                                                            HorizontalAlignment="Stretch"   VerticalAlignment="Stretch"
                               ItemDataSource="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=DataContext.VolumesRVM, Mode=TwoWay}"  />

                                    <Controls:DynamicGridControl x:Name="dynamicSteals" Margin="6"  IsReadOnly="{Binding CurrentPromotion.IsReadOnly}" 
                                                        
                                                          CanSort="False"
                                                            HorizontalAlignment="Stretch"   VerticalAlignment="Stretch"
                               ItemDataSource="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=DataContext.StealVolumesRVM, Mode=TwoWay}"   />
                                </StackPanel>
                        </ScrollViewer>
                    </Grid>

                    <Grid Grid.Row="2" Margin="6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />

                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1" Margin="4" VerticalAlignment="Center"
                                   Text="{lex:Loc Label_Status}" />
                        <TextBlock Grid.Column="2" Margin="4" VerticalAlignment="Center" HorizontalAlignment="Left"
                                   Text="{Binding SelectedStatus.Name}" />
                        <Button Grid.Column="3" Name="btnCancel" Content="{lex:Loc Button_Back, 'Back'}" Width="80"
                                Command="{Binding BackCommand}" />
                        <Button Grid.Column="4" Name="btnNext" Content="{lex:Loc Button_Next, 'Next'}" Width="80" Margin="4,0"
                                Command="{Binding NextCommand}" />
                      
                    </Grid>

                </Grid>

            </UI:ReadOnlyStateManager>
        </Grid>
        <wizard:StatusBarControl Grid.Row="1" />

    </Grid>
</Page>